import { NextRequest, NextResponse } from "next/server";

export const runtime = "nodejs";
export const maxDuration = 60;

export async function POST(request: NextRequest) {
  try {
    const formData = await request.formData();
    const file = formData.get("file") as File;
    const userId = formData.get("userId") as string || "user-12345";

    if (!file) {
      return NextResponse.json(
        { error: "ファイルが見つかりません" },
        { status: 400 }
      );
    }

    // ファイルサイズチェック (15MB)
    if (file.size > 15 * 1024 * 1024) {
      return NextResponse.json(
        { error: "ファイルサイズが大きすぎます (最大15MB)" },
        { status: 400 }
      );
    }

    // サポートされているファイル形式チェック
    const allowedTypes = [
      'application/pdf',
      'image/jpeg',
      'image/jpg', 
      'image/png',
      'image/gif',
      'image/webp',
      'image/svg+xml'
    ];

    if (!allowedTypes.includes(file.type)) {
      return NextResponse.json(
        { error: "サポートされていないファイル形式です" },
        { status: 400 }
      );
    }

    // Dify APIにリクエスト送信
    const difyFormData = new FormData();
    difyFormData.append('inputs', JSON.stringify({}));
    difyFormData.append('response_mode', 'blocking');
    difyFormData.append('user', userId);
    difyFormData.append('files', file);

    console.log('Sending request to Dify API...');
    
    const difyResponse = await fetch(process.env.DIFY_API_URL!, {
      method: 'POST',
      headers: {
        'Authorization': `Bearer ${process.env.DIFY_API_KEY}`,
      },
      body: difyFormData,
    });

    if (!difyResponse.ok) {
      const errorText = await difyResponse.text();
      console.error('Dify API error:', errorText);
      throw new Error(`Dify API Error: ${difyResponse.status} - ${errorText}`);
    }

    const result = await difyResponse.json();
    console.log('Dify API response:', result);

    // レスポンスデータの検証と整形
    if (result.data && result.data.outputs) {
      return NextResponse.json({
        success: true,
        filename: file.name,
        renamed_filename: result.data.outputs.renamed_filename || 'renamed_file.pdf',
        company: result.data.outputs.company || '',
        date: result.data.outputs.date || '',
        amount: result.data.outputs.amount || 0,
        description: result.data.outputs.description || '',
        workflow_run_id: result.data.workflow_run_id,
        elapsed_time: result.data.elapsed_time,
        total_tokens: result.data.total_tokens
      });
    } else {
      throw new Error('Invalid response format from Dify API');
    }

  } catch (error) {
    console.error("API処理エラー:", error);
    return NextResponse.json(
      {
        success: false,
        error: error instanceof Error ? error.message : "処理に失敗しました",
      },
      { status: 500 }
    );
  }
}